//
// THIS FILE IS AUTO-GENERATED BY VKCodeGen.exe

#pragma once

#include "KeyPress.h"

namespace Renfrew::Win32::Interop {
    public ref class D0Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    48; } }
    };

    public ref class D1Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    49; } }
    };

    public ref class D2Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    50; } }
    };

    public ref class D3Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    51; } }
    };

    public ref class D4Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    52; } }
    };

    public ref class D5Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    53; } }
    };

    public ref class D6Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    54; } }
    };

    public ref class D7Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    55; } }
    };

    public ref class D8Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    56; } }
    };

    public ref class D9Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    57; } }
    };

    public ref class AKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    65; } }
    };

    public ref class BKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    66; } }
    };

    public ref class CKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    67; } }
    };

    public ref class DKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    68; } }
    };

    public ref class EKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    69; } }
    };

    public ref class FKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    70; } }
    };

    public ref class GKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    71; } }
    };

    public ref class HKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    72; } }
    };

    public ref class IKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    73; } }
    };

    public ref class JKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    74; } }
    };

    public ref class KKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    75; } }
    };

    public ref class LKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    76; } }
    };

    public ref class MKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    77; } }
    };

    public ref class NKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    78; } }
    };

    public ref class OKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    79; } }
    };

    public ref class PKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    80; } }
    };

    public ref class QKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    81; } }
    };

    public ref class RKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    82; } }
    };

    public ref class SKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    83; } }
    };

    public ref class TKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    84; } }
    };

    public ref class UKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    85; } }
    };

    public ref class VKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    86; } }
    };

    public ref class WKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    87; } }
    };

    public ref class XKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    88; } }
    };

    public ref class YKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    89; } }
    };

    public ref class ZKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    90; } }
    };

    public ref class LButtonKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return     1; } }
    };

    public ref class RButtonKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return     2; } }
    };

    public ref class CancelKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return     3; } }
    };

    public ref class MbuttonKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return     4; } }
    };

    public ref class Xbutton1Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return     5; } }
    };

    public ref class Xbutton2Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return     6; } }
    };

    public ref class BackKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return     8; } }
    };

    public ref class TabKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return     9; } }
    };

    public ref class ClearKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    12; } }
    };

    public ref class ReturnKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    13; } }
    };

    public ref class ShiftKey sealed : ExtendedKeyPress {
        public: property WORD VirtualKeyCode { virtual WORD  get() override { return    16; } }
    };

    public ref class ControlKey sealed : ExtendedKeyPress {
        public: property WORD VirtualKeyCode { virtual WORD  get() override { return    17; } }
    };

    public ref class MenuKey sealed : ExtendedKeyPress {
        public: property WORD VirtualKeyCode { virtual WORD  get() override { return    18; } }
    };

    public ref class PauseKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    19; } }
    };

    public ref class CapitalKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    20; } }
    };

    public ref class KanaKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    21; } }
    };

    public ref class HangeulKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    21; } }
    };

    public ref class HangulKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    21; } }
    };

    public ref class ImeOnKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    22; } }
    };

    public ref class JunjaKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    23; } }
    };

    public ref class FinalKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    24; } }
    };

    public ref class HanjaKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    25; } }
    };

    public ref class KanjiKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    25; } }
    };

    public ref class ImeOffKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    26; } }
    };

    public ref class EscapeKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    27; } }
    };

    public ref class ConvertKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    28; } }
    };

    public ref class NonconvertKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    29; } }
    };

    public ref class AcceptKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    30; } }
    };

    public ref class ModechangeKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    31; } }
    };

    public ref class SpaceKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    32; } }
    };

    public ref class PriorKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    33; } }
    };

    public ref class NextKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    34; } }
    };

    public ref class EndKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    35; } }
    };

    public ref class HomeKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    36; } }
    };

    public ref class LeftKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    37; } }
    };

    public ref class UpKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    38; } }
    };

    public ref class RightKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    39; } }
    };

    public ref class DownKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    40; } }
    };

    public ref class SelectKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    41; } }
    };

    public ref class PrintKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    42; } }
    };

    public ref class ExecuteKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    43; } }
    };

    public ref class SnapshotKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    44; } }
    };

    public ref class InsertKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    45; } }
    };

    public ref class DeleteKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    46; } }
    };

    public ref class HelpKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    47; } }
    };

    public ref class LWinKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    91; } }
    };

    public ref class RWinKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    92; } }
    };

    public ref class AppsKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    93; } }
    };

    public ref class SleepKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    95; } }
    };

    public ref class Numpad0Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    96; } }
    };

    public ref class Numpad1Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    97; } }
    };

    public ref class Numpad2Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    98; } }
    };

    public ref class Numpad3Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return    99; } }
    };

    public ref class Numpad4Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   100; } }
    };

    public ref class Numpad5Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   101; } }
    };

    public ref class Numpad6Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   102; } }
    };

    public ref class Numpad7Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   103; } }
    };

    public ref class Numpad8Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   104; } }
    };

    public ref class Numpad9Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   105; } }
    };

    public ref class MultiplyKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   106; } }
    };

    public ref class AddKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   107; } }
    };

    public ref class SeparatorKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   108; } }
    };

    public ref class SubtractKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   109; } }
    };

    public ref class DecimalKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   110; } }
    };

    public ref class DivideKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   111; } }
    };

    public ref class F1Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   112; } }
    };

    public ref class F2Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   113; } }
    };

    public ref class F3Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   114; } }
    };

    public ref class F4Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   115; } }
    };

    public ref class F5Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   116; } }
    };

    public ref class F6Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   117; } }
    };

    public ref class F7Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   118; } }
    };

    public ref class F8Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   119; } }
    };

    public ref class F9Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   120; } }
    };

    public ref class F10Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   121; } }
    };

    public ref class F11Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   122; } }
    };

    public ref class F12Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   123; } }
    };

    public ref class F13Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   124; } }
    };

    public ref class F14Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   125; } }
    };

    public ref class F15Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   126; } }
    };

    public ref class F16Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   127; } }
    };

    public ref class F17Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   128; } }
    };

    public ref class F18Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   129; } }
    };

    public ref class F19Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   130; } }
    };

    public ref class F20Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   131; } }
    };

    public ref class F21Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   132; } }
    };

    public ref class F22Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   133; } }
    };

    public ref class F23Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   134; } }
    };

    public ref class F24Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   135; } }
    };

    public ref class NavigationViewKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   136; } }
    };

    public ref class NavigationMenuKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   137; } }
    };

    public ref class NavigationUpKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   138; } }
    };

    public ref class NavigationDownKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   139; } }
    };

    public ref class NavigationLeftKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   140; } }
    };

    public ref class NavigationRightKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   141; } }
    };

    public ref class NavigationAcceptKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   142; } }
    };

    public ref class NavigationCancelKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   143; } }
    };

    public ref class NumlockKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   144; } }
    };

    public ref class ScrollKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   145; } }
    };

    public ref class OemNecEqualKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   146; } }
    };

    public ref class OemFjJishoKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   146; } }
    };

    public ref class OemFjMasshouKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   147; } }
    };

    public ref class OemFjTourokuKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   148; } }
    };

    public ref class OemFjLoyaKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   149; } }
    };

    public ref class OemFjRoyaKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   150; } }
    };

    public ref class BrowserBackKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   166; } }
    };

    public ref class BrowserForwardKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   167; } }
    };

    public ref class BrowserRefreshKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   168; } }
    };

    public ref class BrowserStopKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   169; } }
    };

    public ref class BrowserSearchKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   170; } }
    };

    public ref class BrowserFavoritesKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   171; } }
    };

    public ref class BrowserHomeKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   172; } }
    };

    public ref class VolumeMuteKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   173; } }
    };

    public ref class VolumeDownKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   174; } }
    };

    public ref class VolumeUpKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   175; } }
    };

    public ref class MediaNextTrackKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   176; } }
    };

    public ref class MediaPrevTrackKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   177; } }
    };

    public ref class MediaStopKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   178; } }
    };

    public ref class MediaPlayPauseKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   179; } }
    };

    public ref class LaunchMailKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   180; } }
    };

    public ref class LaunchMediaSelectKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   181; } }
    };

    public ref class LaunchApp1Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   182; } }
    };

    public ref class LaunchApp2Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   183; } }
    };

    public ref class Oem1Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   186; } }
    };

    public ref class OemPlusKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   187; } }
    };

    public ref class OemCommaKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   188; } }
    };

    public ref class OemMinusKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   189; } }
    };

    public ref class OemPeriodKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   190; } }
    };

    public ref class Oem2Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   191; } }
    };

    public ref class Oem3Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   192; } }
    };

    public ref class GamepadAKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   195; } }
    };

    public ref class GamepadBKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   196; } }
    };

    public ref class GamepadXKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   197; } }
    };

    public ref class GamepadYKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   198; } }
    };

    public ref class GamepadRightShoulderKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   199; } }
    };

    public ref class GamepadLeftShoulderKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   200; } }
    };

    public ref class GamepadLeftTriggerKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   201; } }
    };

    public ref class GamepadRightTriggerKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   202; } }
    };

    public ref class GamepadDpadUpKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   203; } }
    };

    public ref class GamepadDpadDownKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   204; } }
    };

    public ref class GamepadDpadLeftKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   205; } }
    };

    public ref class GamepadDpadRightKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   206; } }
    };

    public ref class GamepadMenuKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   207; } }
    };

    public ref class GamepadViewKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   208; } }
    };

    public ref class GamepadLeftThumbstickButtonKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   209; } }
    };

    public ref class GamepadRightThumbstickButtonKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   210; } }
    };

    public ref class GamepadLeftThumbstickUpKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   211; } }
    };

    public ref class GamepadLeftThumbstickDownKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   212; } }
    };

    public ref class GamepadLeftThumbstickRightKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   213; } }
    };

    public ref class GamepadLeftThumbstickLeftKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   214; } }
    };

    public ref class GamepadRightThumbstickUpKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   215; } }
    };

    public ref class GamepadRightThumbstickDownKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   216; } }
    };

    public ref class GamepadRightThumbstickRightKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   217; } }
    };

    public ref class GamepadRightThumbstickLeftKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   218; } }
    };

    public ref class Oem4Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   219; } }
    };

    public ref class Oem5Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   220; } }
    };

    public ref class Oem6Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   221; } }
    };

    public ref class Oem7Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   222; } }
    };

    public ref class Oem8Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   223; } }
    };

    public ref class OemAxKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   225; } }
    };

    public ref class Oem102Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   226; } }
    };

    public ref class IcoHelpKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   227; } }
    };

    public ref class Ico00Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   228; } }
    };

    public ref class ProcesskeyKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   229; } }
    };

    public ref class IcoClearKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   230; } }
    };

    public ref class PacketKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   231; } }
    };

    public ref class OemResetKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   233; } }
    };

    public ref class OemJumpKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   234; } }
    };

    public ref class OemPa1Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   235; } }
    };

    public ref class OemPa2Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   236; } }
    };

    public ref class OemPa3Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   237; } }
    };

    public ref class OemWsctrlKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   238; } }
    };

    public ref class OemCuselKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   239; } }
    };

    public ref class OemAttnKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   240; } }
    };

    public ref class OemFinishKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   241; } }
    };

    public ref class OemCopyKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   242; } }
    };

    public ref class OemAutoKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   243; } }
    };

    public ref class OemEnlwKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   244; } }
    };

    public ref class OemBacktabKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   245; } }
    };

    public ref class AttnKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   246; } }
    };

    public ref class CrselKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   247; } }
    };

    public ref class ExselKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   248; } }
    };

    public ref class EreofKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   249; } }
    };

    public ref class PlayKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   250; } }
    };

    public ref class ZoomKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   251; } }
    };

    public ref class NonameKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   252; } }
    };

    public ref class Pa1Key sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   253; } }
    };

    public ref class OemClearKey sealed : KeyPress {
        public: property WORD VirtualKeyCode { virtual WORD get() override { return   254; } }
    };

    public ref class Key abstract sealed {
        public: static initonly D0Key                           ^ D0                               = gcnew D0Key                              ;
        public: static initonly D1Key                           ^ D1                               = gcnew D1Key                              ;
        public: static initonly D2Key                           ^ D2                               = gcnew D2Key                              ;
        public: static initonly D3Key                           ^ D3                               = gcnew D3Key                              ;
        public: static initonly D4Key                           ^ D4                               = gcnew D4Key                              ;
        public: static initonly D5Key                           ^ D5                               = gcnew D5Key                              ;
        public: static initonly D6Key                           ^ D6                               = gcnew D6Key                              ;
        public: static initonly D7Key                           ^ D7                               = gcnew D7Key                              ;
        public: static initonly D8Key                           ^ D8                               = gcnew D8Key                              ;
        public: static initonly D9Key                           ^ D9                               = gcnew D9Key                              ;
        public: static initonly AKey                            ^ A                                = gcnew AKey                               ;
        public: static initonly BKey                            ^ B                                = gcnew BKey                               ;
        public: static initonly CKey                            ^ C                                = gcnew CKey                               ;
        public: static initonly DKey                            ^ D                                = gcnew DKey                               ;
        public: static initonly EKey                            ^ E                                = gcnew EKey                               ;
        public: static initonly FKey                            ^ F                                = gcnew FKey                               ;
        public: static initonly GKey                            ^ G                                = gcnew GKey                               ;
        public: static initonly HKey                            ^ H                                = gcnew HKey                               ;
        public: static initonly IKey                            ^ I                                = gcnew IKey                               ;
        public: static initonly JKey                            ^ J                                = gcnew JKey                               ;
        public: static initonly KKey                            ^ K                                = gcnew KKey                               ;
        public: static initonly LKey                            ^ L                                = gcnew LKey                               ;
        public: static initonly MKey                            ^ M                                = gcnew MKey                               ;
        public: static initonly NKey                            ^ N                                = gcnew NKey                               ;
        public: static initonly OKey                            ^ O                                = gcnew OKey                               ;
        public: static initonly PKey                            ^ P                                = gcnew PKey                               ;
        public: static initonly QKey                            ^ Q                                = gcnew QKey                               ;
        public: static initonly RKey                            ^ R                                = gcnew RKey                               ;
        public: static initonly SKey                            ^ S                                = gcnew SKey                               ;
        public: static initonly TKey                            ^ T                                = gcnew TKey                               ;
        public: static initonly UKey                            ^ U                                = gcnew UKey                               ;
        public: static initonly VKey                            ^ V                                = gcnew VKey                               ;
        public: static initonly WKey                            ^ W                                = gcnew WKey                               ;
        public: static initonly XKey                            ^ X                                = gcnew XKey                               ;
        public: static initonly YKey                            ^ Y                                = gcnew YKey                               ;
        public: static initonly ZKey                            ^ Z                                = gcnew ZKey                               ;
        public: static initonly LButtonKey                      ^ LButton                          = gcnew LButtonKey                         ;
        public: static initonly RButtonKey                      ^ RButton                          = gcnew RButtonKey                         ;
        public: static initonly CancelKey                       ^ Cancel                           = gcnew CancelKey                          ;
        public: static initonly MbuttonKey                      ^ Mbutton                          = gcnew MbuttonKey                         ;
        public: static initonly Xbutton1Key                     ^ Xbutton1                         = gcnew Xbutton1Key                        ;
        public: static initonly Xbutton2Key                     ^ Xbutton2                         = gcnew Xbutton2Key                        ;
        public: static initonly BackKey                         ^ Back                             = gcnew BackKey                            ;
        public: static initonly TabKey                          ^ Tab                              = gcnew TabKey                             ;
        public: static initonly ClearKey                        ^ Clear                            = gcnew ClearKey                           ;
        public: static initonly ReturnKey                       ^ Return                           = gcnew ReturnKey                          ;
        public: static initonly ShiftKey                        ^ Shift                            = gcnew ShiftKey                           ;
        public: static initonly ControlKey                      ^ Control                          = gcnew ControlKey                         ;
        public: static initonly MenuKey                         ^ Menu                             = gcnew MenuKey                            ;
        public: static initonly PauseKey                        ^ Pause                            = gcnew PauseKey                           ;
        public: static initonly CapitalKey                      ^ Capital                          = gcnew CapitalKey                         ;
        public: static initonly KanaKey                         ^ Kana                             = gcnew KanaKey                            ;
        public: static initonly HangeulKey                      ^ Hangeul                          = gcnew HangeulKey                         ;
        public: static initonly HangulKey                       ^ Hangul                           = gcnew HangulKey                          ;
        public: static initonly ImeOnKey                        ^ ImeOn                            = gcnew ImeOnKey                           ;
        public: static initonly JunjaKey                        ^ Junja                            = gcnew JunjaKey                           ;
        public: static initonly FinalKey                        ^ Final                            = gcnew FinalKey                           ;
        public: static initonly HanjaKey                        ^ Hanja                            = gcnew HanjaKey                           ;
        public: static initonly KanjiKey                        ^ Kanji                            = gcnew KanjiKey                           ;
        public: static initonly ImeOffKey                       ^ ImeOff                           = gcnew ImeOffKey                          ;
        public: static initonly EscapeKey                       ^ Escape                           = gcnew EscapeKey                          ;
        public: static initonly ConvertKey                      ^ Convert                          = gcnew ConvertKey                         ;
        public: static initonly NonconvertKey                   ^ Nonconvert                       = gcnew NonconvertKey                      ;
        public: static initonly AcceptKey                       ^ Accept                           = gcnew AcceptKey                          ;
        public: static initonly ModechangeKey                   ^ Modechange                       = gcnew ModechangeKey                      ;
        public: static initonly SpaceKey                        ^ Space                            = gcnew SpaceKey                           ;
        public: static initonly PriorKey                        ^ Prior                            = gcnew PriorKey                           ;
        public: static initonly NextKey                         ^ Next                             = gcnew NextKey                            ;
        public: static initonly EndKey                          ^ End                              = gcnew EndKey                             ;
        public: static initonly HomeKey                         ^ Home                             = gcnew HomeKey                            ;
        public: static initonly LeftKey                         ^ Left                             = gcnew LeftKey                            ;
        public: static initonly UpKey                           ^ Up                               = gcnew UpKey                              ;
        public: static initonly RightKey                        ^ Right                            = gcnew RightKey                           ;
        public: static initonly DownKey                         ^ Down                             = gcnew DownKey                            ;
        public: static initonly SelectKey                       ^ Select                           = gcnew SelectKey                          ;
        public: static initonly PrintKey                        ^ Print                            = gcnew PrintKey                           ;
        public: static initonly ExecuteKey                      ^ Execute                          = gcnew ExecuteKey                         ;
        public: static initonly SnapshotKey                     ^ Snapshot                         = gcnew SnapshotKey                        ;
        public: static initonly InsertKey                       ^ Insert                           = gcnew InsertKey                          ;
        public: static initonly DeleteKey                       ^ Delete                           = gcnew DeleteKey                          ;
        public: static initonly HelpKey                         ^ Help                             = gcnew HelpKey                            ;
        public: static initonly LWinKey                         ^ LWin                             = gcnew LWinKey                            ;
        public: static initonly RWinKey                         ^ RWin                             = gcnew RWinKey                            ;
        public: static initonly AppsKey                         ^ Apps                             = gcnew AppsKey                            ;
        public: static initonly SleepKey                        ^ Sleep                            = gcnew SleepKey                           ;
        public: static initonly Numpad0Key                      ^ Numpad0                          = gcnew Numpad0Key                         ;
        public: static initonly Numpad1Key                      ^ Numpad1                          = gcnew Numpad1Key                         ;
        public: static initonly Numpad2Key                      ^ Numpad2                          = gcnew Numpad2Key                         ;
        public: static initonly Numpad3Key                      ^ Numpad3                          = gcnew Numpad3Key                         ;
        public: static initonly Numpad4Key                      ^ Numpad4                          = gcnew Numpad4Key                         ;
        public: static initonly Numpad5Key                      ^ Numpad5                          = gcnew Numpad5Key                         ;
        public: static initonly Numpad6Key                      ^ Numpad6                          = gcnew Numpad6Key                         ;
        public: static initonly Numpad7Key                      ^ Numpad7                          = gcnew Numpad7Key                         ;
        public: static initonly Numpad8Key                      ^ Numpad8                          = gcnew Numpad8Key                         ;
        public: static initonly Numpad9Key                      ^ Numpad9                          = gcnew Numpad9Key                         ;
        public: static initonly MultiplyKey                     ^ Multiply                         = gcnew MultiplyKey                        ;
        public: static initonly AddKey                          ^ Add                              = gcnew AddKey                             ;
        public: static initonly SeparatorKey                    ^ Separator                        = gcnew SeparatorKey                       ;
        public: static initonly SubtractKey                     ^ Subtract                         = gcnew SubtractKey                        ;
        public: static initonly DecimalKey                      ^ Decimal                          = gcnew DecimalKey                         ;
        public: static initonly DivideKey                       ^ Divide                           = gcnew DivideKey                          ;
        public: static initonly F1Key                           ^ F1                               = gcnew F1Key                              ;
        public: static initonly F2Key                           ^ F2                               = gcnew F2Key                              ;
        public: static initonly F3Key                           ^ F3                               = gcnew F3Key                              ;
        public: static initonly F4Key                           ^ F4                               = gcnew F4Key                              ;
        public: static initonly F5Key                           ^ F5                               = gcnew F5Key                              ;
        public: static initonly F6Key                           ^ F6                               = gcnew F6Key                              ;
        public: static initonly F7Key                           ^ F7                               = gcnew F7Key                              ;
        public: static initonly F8Key                           ^ F8                               = gcnew F8Key                              ;
        public: static initonly F9Key                           ^ F9                               = gcnew F9Key                              ;
        public: static initonly F10Key                          ^ F10                              = gcnew F10Key                             ;
        public: static initonly F11Key                          ^ F11                              = gcnew F11Key                             ;
        public: static initonly F12Key                          ^ F12                              = gcnew F12Key                             ;
        public: static initonly F13Key                          ^ F13                              = gcnew F13Key                             ;
        public: static initonly F14Key                          ^ F14                              = gcnew F14Key                             ;
        public: static initonly F15Key                          ^ F15                              = gcnew F15Key                             ;
        public: static initonly F16Key                          ^ F16                              = gcnew F16Key                             ;
        public: static initonly F17Key                          ^ F17                              = gcnew F17Key                             ;
        public: static initonly F18Key                          ^ F18                              = gcnew F18Key                             ;
        public: static initonly F19Key                          ^ F19                              = gcnew F19Key                             ;
        public: static initonly F20Key                          ^ F20                              = gcnew F20Key                             ;
        public: static initonly F21Key                          ^ F21                              = gcnew F21Key                             ;
        public: static initonly F22Key                          ^ F22                              = gcnew F22Key                             ;
        public: static initonly F23Key                          ^ F23                              = gcnew F23Key                             ;
        public: static initonly F24Key                          ^ F24                              = gcnew F24Key                             ;
        public: static initonly NavigationViewKey               ^ NavigationView                   = gcnew NavigationViewKey                  ;
        public: static initonly NavigationMenuKey               ^ NavigationMenu                   = gcnew NavigationMenuKey                  ;
        public: static initonly NavigationUpKey                 ^ NavigationUp                     = gcnew NavigationUpKey                    ;
        public: static initonly NavigationDownKey               ^ NavigationDown                   = gcnew NavigationDownKey                  ;
        public: static initonly NavigationLeftKey               ^ NavigationLeft                   = gcnew NavigationLeftKey                  ;
        public: static initonly NavigationRightKey              ^ NavigationRight                  = gcnew NavigationRightKey                 ;
        public: static initonly NavigationAcceptKey             ^ NavigationAccept                 = gcnew NavigationAcceptKey                ;
        public: static initonly NavigationCancelKey             ^ NavigationCancel                 = gcnew NavigationCancelKey                ;
        public: static initonly NumlockKey                      ^ Numlock                          = gcnew NumlockKey                         ;
        public: static initonly ScrollKey                       ^ Scroll                           = gcnew ScrollKey                          ;
        public: static initonly OemNecEqualKey                  ^ OemNecEqual                      = gcnew OemNecEqualKey                     ;
        public: static initonly OemFjJishoKey                   ^ OemFjJisho                       = gcnew OemFjJishoKey                      ;
        public: static initonly OemFjMasshouKey                 ^ OemFjMasshou                     = gcnew OemFjMasshouKey                    ;
        public: static initonly OemFjTourokuKey                 ^ OemFjTouroku                     = gcnew OemFjTourokuKey                    ;
        public: static initonly OemFjLoyaKey                    ^ OemFjLoya                        = gcnew OemFjLoyaKey                       ;
        public: static initonly OemFjRoyaKey                    ^ OemFjRoya                        = gcnew OemFjRoyaKey                       ;
        public: static initonly BrowserBackKey                  ^ BrowserBack                      = gcnew BrowserBackKey                     ;
        public: static initonly BrowserForwardKey               ^ BrowserForward                   = gcnew BrowserForwardKey                  ;
        public: static initonly BrowserRefreshKey               ^ BrowserRefresh                   = gcnew BrowserRefreshKey                  ;
        public: static initonly BrowserStopKey                  ^ BrowserStop                      = gcnew BrowserStopKey                     ;
        public: static initonly BrowserSearchKey                ^ BrowserSearch                    = gcnew BrowserSearchKey                   ;
        public: static initonly BrowserFavoritesKey             ^ BrowserFavorites                 = gcnew BrowserFavoritesKey                ;
        public: static initonly BrowserHomeKey                  ^ BrowserHome                      = gcnew BrowserHomeKey                     ;
        public: static initonly VolumeMuteKey                   ^ VolumeMute                       = gcnew VolumeMuteKey                      ;
        public: static initonly VolumeDownKey                   ^ VolumeDown                       = gcnew VolumeDownKey                      ;
        public: static initonly VolumeUpKey                     ^ VolumeUp                         = gcnew VolumeUpKey                        ;
        public: static initonly MediaNextTrackKey               ^ MediaNextTrack                   = gcnew MediaNextTrackKey                  ;
        public: static initonly MediaPrevTrackKey               ^ MediaPrevTrack                   = gcnew MediaPrevTrackKey                  ;
        public: static initonly MediaStopKey                    ^ MediaStop                        = gcnew MediaStopKey                       ;
        public: static initonly MediaPlayPauseKey               ^ MediaPlayPause                   = gcnew MediaPlayPauseKey                  ;
        public: static initonly LaunchMailKey                   ^ LaunchMail                       = gcnew LaunchMailKey                      ;
        public: static initonly LaunchMediaSelectKey            ^ LaunchMediaSelect                = gcnew LaunchMediaSelectKey               ;
        public: static initonly LaunchApp1Key                   ^ LaunchApp1                       = gcnew LaunchApp1Key                      ;
        public: static initonly LaunchApp2Key                   ^ LaunchApp2                       = gcnew LaunchApp2Key                      ;
        public: static initonly Oem1Key                         ^ Oem1                             = gcnew Oem1Key                            ;
        public: static initonly OemPlusKey                      ^ OemPlus                          = gcnew OemPlusKey                         ;
        public: static initonly OemCommaKey                     ^ OemComma                         = gcnew OemCommaKey                        ;
        public: static initonly OemMinusKey                     ^ OemMinus                         = gcnew OemMinusKey                        ;
        public: static initonly OemPeriodKey                    ^ OemPeriod                        = gcnew OemPeriodKey                       ;
        public: static initonly Oem2Key                         ^ Oem2                             = gcnew Oem2Key                            ;
        public: static initonly Oem3Key                         ^ Oem3                             = gcnew Oem3Key                            ;
        public: static initonly GamepadAKey                     ^ GamepadA                         = gcnew GamepadAKey                        ;
        public: static initonly GamepadBKey                     ^ GamepadB                         = gcnew GamepadBKey                        ;
        public: static initonly GamepadXKey                     ^ GamepadX                         = gcnew GamepadXKey                        ;
        public: static initonly GamepadYKey                     ^ GamepadY                         = gcnew GamepadYKey                        ;
        public: static initonly GamepadRightShoulderKey         ^ GamepadRightShoulder             = gcnew GamepadRightShoulderKey            ;
        public: static initonly GamepadLeftShoulderKey          ^ GamepadLeftShoulder              = gcnew GamepadLeftShoulderKey             ;
        public: static initonly GamepadLeftTriggerKey           ^ GamepadLeftTrigger               = gcnew GamepadLeftTriggerKey              ;
        public: static initonly GamepadRightTriggerKey          ^ GamepadRightTrigger              = gcnew GamepadRightTriggerKey             ;
        public: static initonly GamepadDpadUpKey                ^ GamepadDpadUp                    = gcnew GamepadDpadUpKey                   ;
        public: static initonly GamepadDpadDownKey              ^ GamepadDpadDown                  = gcnew GamepadDpadDownKey                 ;
        public: static initonly GamepadDpadLeftKey              ^ GamepadDpadLeft                  = gcnew GamepadDpadLeftKey                 ;
        public: static initonly GamepadDpadRightKey             ^ GamepadDpadRight                 = gcnew GamepadDpadRightKey                ;
        public: static initonly GamepadMenuKey                  ^ GamepadMenu                      = gcnew GamepadMenuKey                     ;
        public: static initonly GamepadViewKey                  ^ GamepadView                      = gcnew GamepadViewKey                     ;
        public: static initonly GamepadLeftThumbstickButtonKey  ^ GamepadLeftThumbstickButton      = gcnew GamepadLeftThumbstickButtonKey     ;
        public: static initonly GamepadRightThumbstickButtonKey ^ GamepadRightThumbstickButton     = gcnew GamepadRightThumbstickButtonKey    ;
        public: static initonly GamepadLeftThumbstickUpKey      ^ GamepadLeftThumbstickUp          = gcnew GamepadLeftThumbstickUpKey         ;
        public: static initonly GamepadLeftThumbstickDownKey    ^ GamepadLeftThumbstickDown        = gcnew GamepadLeftThumbstickDownKey       ;
        public: static initonly GamepadLeftThumbstickRightKey   ^ GamepadLeftThumbstickRight       = gcnew GamepadLeftThumbstickRightKey      ;
        public: static initonly GamepadLeftThumbstickLeftKey    ^ GamepadLeftThumbstickLeft        = gcnew GamepadLeftThumbstickLeftKey       ;
        public: static initonly GamepadRightThumbstickUpKey     ^ GamepadRightThumbstickUp         = gcnew GamepadRightThumbstickUpKey        ;
        public: static initonly GamepadRightThumbstickDownKey   ^ GamepadRightThumbstickDown       = gcnew GamepadRightThumbstickDownKey      ;
        public: static initonly GamepadRightThumbstickRightKey  ^ GamepadRightThumbstickRight      = gcnew GamepadRightThumbstickRightKey     ;
        public: static initonly GamepadRightThumbstickLeftKey   ^ GamepadRightThumbstickLeft       = gcnew GamepadRightThumbstickLeftKey      ;
        public: static initonly Oem4Key                         ^ Oem4                             = gcnew Oem4Key                            ;
        public: static initonly Oem5Key                         ^ Oem5                             = gcnew Oem5Key                            ;
        public: static initonly Oem6Key                         ^ Oem6                             = gcnew Oem6Key                            ;
        public: static initonly Oem7Key                         ^ Oem7                             = gcnew Oem7Key                            ;
        public: static initonly Oem8Key                         ^ Oem8                             = gcnew Oem8Key                            ;
        public: static initonly OemAxKey                        ^ OemAx                            = gcnew OemAxKey                           ;
        public: static initonly Oem102Key                       ^ Oem102                           = gcnew Oem102Key                          ;
        public: static initonly IcoHelpKey                      ^ IcoHelp                          = gcnew IcoHelpKey                         ;
        public: static initonly Ico00Key                        ^ Ico00                            = gcnew Ico00Key                           ;
        public: static initonly ProcesskeyKey                   ^ Processkey                       = gcnew ProcesskeyKey                      ;
        public: static initonly IcoClearKey                     ^ IcoClear                         = gcnew IcoClearKey                        ;
        public: static initonly PacketKey                       ^ Packet                           = gcnew PacketKey                          ;
        public: static initonly OemResetKey                     ^ OemReset                         = gcnew OemResetKey                        ;
        public: static initonly OemJumpKey                      ^ OemJump                          = gcnew OemJumpKey                         ;
        public: static initonly OemPa1Key                       ^ OemPa1                           = gcnew OemPa1Key                          ;
        public: static initonly OemPa2Key                       ^ OemPa2                           = gcnew OemPa2Key                          ;
        public: static initonly OemPa3Key                       ^ OemPa3                           = gcnew OemPa3Key                          ;
        public: static initonly OemWsctrlKey                    ^ OemWsctrl                        = gcnew OemWsctrlKey                       ;
        public: static initonly OemCuselKey                     ^ OemCusel                         = gcnew OemCuselKey                        ;
        public: static initonly OemAttnKey                      ^ OemAttn                          = gcnew OemAttnKey                         ;
        public: static initonly OemFinishKey                    ^ OemFinish                        = gcnew OemFinishKey                       ;
        public: static initonly OemCopyKey                      ^ OemCopy                          = gcnew OemCopyKey                         ;
        public: static initonly OemAutoKey                      ^ OemAuto                          = gcnew OemAutoKey                         ;
        public: static initonly OemEnlwKey                      ^ OemEnlw                          = gcnew OemEnlwKey                         ;
        public: static initonly OemBacktabKey                   ^ OemBacktab                       = gcnew OemBacktabKey                      ;
        public: static initonly AttnKey                         ^ Attn                             = gcnew AttnKey                            ;
        public: static initonly CrselKey                        ^ Crsel                            = gcnew CrselKey                           ;
        public: static initonly ExselKey                        ^ Exsel                            = gcnew ExselKey                           ;
        public: static initonly EreofKey                        ^ Ereof                            = gcnew EreofKey                           ;
        public: static initonly PlayKey                         ^ Play                             = gcnew PlayKey                            ;
        public: static initonly ZoomKey                         ^ Zoom                             = gcnew ZoomKey                            ;
        public: static initonly NonameKey                       ^ Noname                           = gcnew NonameKey                          ;
        public: static initonly Pa1Key                          ^ Pa1                              = gcnew Pa1Key                             ;
        public: static initonly OemClearKey                     ^ OemClear                         = gcnew OemClearKey                        ;
    };
}
